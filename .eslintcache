[{"/Users/kenny01123/personal_project/snake/src/reportWebVitals.js":"1","/Users/kenny01123/personal_project/snake/src/App.js":"2","/Users/kenny01123/personal_project/snake/src/components/profile.jsx":"3","/Users/kenny01123/personal_project/snake/src/index.js":"4","/Users/kenny01123/personal_project/snake/src/components/timer.jsx":"5","/Users/kenny01123/personal_project/snake/src/components/arrows.jsx":"6","/Users/kenny01123/personal_project/snake/src/components/table.jsx":"7","/Users/kenny01123/personal_project/snake/src/components/contact.jsx":"8","/Users/kenny01123/personal_project/snake/src/components/instruction.jsx":"9","/Users/kenny01123/personal_project/snake/src/components/projects.jsx":"10"},{"size":362,"mtime":1612172883075,"results":"11","hashOfConfig":"12"},{"size":10340,"mtime":1612789386069,"results":"13","hashOfConfig":"12"},{"size":2514,"mtime":1612784342527,"results":"14","hashOfConfig":"12"},{"size":504,"mtime":1612362352715,"results":"15","hashOfConfig":"12"},{"size":121,"mtime":1612363009688,"results":"16","hashOfConfig":"12"},{"size":465,"mtime":1612437882709,"results":"17","hashOfConfig":"12"},{"size":309,"mtime":1612792901536,"results":"18","hashOfConfig":"12"},{"size":746,"mtime":1612518408866,"results":"19","hashOfConfig":"12"},{"size":350,"mtime":1612439949109,"results":"20","hashOfConfig":"12"},{"size":4783,"mtime":1612788747546,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1bd5vyb",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"/Users/kenny01123/personal_project/snake/src/reportWebVitals.js",[],["55","56"],"/Users/kenny01123/personal_project/snake/src/App.js",["57","58","59","60"],"import React, { useState, useEffect, useReducer } from \"react\";\nimport cs from \"classnames\";\nimport Profile from \"./components/profile\";\nimport Timer from \"./components/timer\";\nimport Arrows from \"./components/arrows\";\nimport Table from \"./components/table\";\nimport Contact from \"./components/contact\";\nimport Instruction from \"./components/instruction\";\nimport Projects from \"./components/projects\";\n\nimport \"./css/App.css\";\nimport \"./css/arrows.css\";\nimport \"./css/mobile.css\";\nimport \"./css/table.css\";\n\nconst TICK_RATE = 100;\nconst GRID_SIZE = 35;\nconst GRID = [];\n\nfor (let i = 0; i <= GRID_SIZE; i++) {\n  GRID.push(i);\n}\n\nconst DIRECTIONS = {\n  UP: \"UP\",\n  BOTTOM: \"BOTTOM\",\n  RIGHT: \"RIGHT\",\n  LEFT: \"LEFT\",\n};\n\nconst DIRECTION_TICKS = {\n  UP: (x, y) => ({ x, y: y - 1 }),\n  BOTTOM: (x, y) => ({ x, y: y + 1 }),\n  RIGHT: (x, y) => ({ x: x + 1, y }),\n  LEFT: (x, y) => ({ x: x - 1, y }),\n};\n\nconst KEY_CODES_MAPPER = {\n  38: \"UP\",\n  39: \"RIGHT\",\n  37: \"LEFT\",\n  40: \"BOTTOM\",\n};\n\nconst getRandomNumberFromRange = (min, max) =>\n  Math.floor(Math.random() * (max - min + 1) + min);\n\nconst getRandomCoordinate = () => ({\n  x: getRandomNumberFromRange(1, GRID_SIZE - 1),\n  y: getRandomNumberFromRange(1, GRID_SIZE - 1),\n});\n\nconst getMiddleCooridinate = () => ({\n  x: Math.floor((GRID_SIZE + 1) / 2),\n  y: Math.floor((GRID_SIZE + 1) / 2),\n});\n\nconst isBorder = (x, y) =>\n  x === 0 || y === 0 || x === GRID_SIZE || y === GRID_SIZE;\n\nconst isPosition = (x, y, diffX, diffY) => x === diffX && y === diffY;\n\nconst isSnake = (x, y, snakeCoordinates) =>\n  snakeCoordinates.filter((coordinate) =>\n    isPosition(coordinate.x, coordinate.y, x, y)\n  ).length;\n\nconst getSnakeHead = (snake) => snake.coordinates[0];\n\nconst getSnakeWithoutStub = (snake) =>\n  snake.coordinates.slice(0, snake.coordinates.length - 1);\n\nconst getSnakeTail = (snake) => snake.coordinates.slice(1);\n\nconst getIsSnakeOutside = (snake) =>\n  getSnakeHead(snake).x >= GRID_SIZE ||\n  getSnakeHead(snake).y >= GRID_SIZE ||\n  getSnakeHead(snake).x <= 0 ||\n  getSnakeHead(snake).y <= 0;\n\nconst getIsSnakeClumy = (snake) =>\n  isSnake(getSnakeHead(snake).x, getSnakeHead(snake).y, getSnakeTail(snake));\n\nconst getIsSnakeEating = ({ snake, snack }) =>\n  isPosition(\n    getSnakeHead(snake).x,\n    getSnakeHead(snake).y,\n    snack.coordinate.x,\n    snack.coordinate.y\n  );\nconst getIsSnakeGettingResume = ({ snake, resume }) =>\n  isPosition(\n    getSnakeHead(snake).x,\n    getSnakeHead(snake).y,\n    resume.coordinate.x,\n    resume.coordinate.y\n  );\nconst getIsSnakeGettingProjects = ({ snake, projects }) =>\n  isPosition(\n    getSnakeHead(snake).x,\n    getSnakeHead(snake).y,\n    projects.coordinate.x,\n    projects.coordinate.y\n  );\n\nconst getCellCs = (isGameOver, snake, snack, resume, projects, x, y) =>\n  cs(\"grid-cell\", {\n    \"grid-cell-border\": isBorder(x, y),\n    \"grid-cell-snake\": isSnake(x, y, snake.coordinates),\n    \"grid-cell-snack\": isPosition(x, y, snack.coordinate.x, snack.coordinate.y),\n    \"grid-cell-resume\": isPosition(\n      x,\n      y,\n      resume.coordinate.x,\n      resume.coordinate.y\n    ),\n    \"grid-cell-projects\": isPosition(\n      x,\n      y,\n      projects.coordinate.x,\n      projects.coordinate.y\n    ),\n    \"grid-cell-hit\":\n      isGameOver &&\n      isPosition(x, y, getSnakeHead(snake).x, getSnakeHead(snake).y),\n  });\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SNAKE_CHANGE_DIRECTION\":\n      return {\n        ...state,\n        playground: {\n          ...state.playground,\n          direction: action.direction,\n        },\n      };\n    case \"SNAKE_MOVE\":\n      console.log(\"moving\");\n      const isSnakeEating = getIsSnakeEating(state);\n      const isSnakeResume = getIsSnakeGettingResume(state);\n      const isSnakeProjects = getIsSnakeGettingProjects(state);\n\n      const snakeHead = DIRECTION_TICKS[state.playground.direction](\n        getSnakeHead(state.snake).x,\n        getSnakeHead(state.snake).y\n      );\n      // making the tail longer\n      const snakeTail =\n        isSnakeEating || isSnakeResume || isSnakeProjects\n          ? state.snake.coordinates\n          : getSnakeWithoutStub(state.snake);\n      const snackCoordinate = isSnakeEating\n        ? getRandomCoordinate()\n        : state.snack.coordinate;\n      const resumeCoordinate = isSnakeResume\n        ? getRandomCoordinate()\n        : state.resume.coordinate;\n      const projectsCoordinate = isSnakeProjects\n        ? getRandomCoordinate()\n        : state.projects.coordinate;\n\n      return {\n        ...state,\n        snake: {\n          coordinates: [snakeHead, ...snakeTail],\n        },\n        snack: {\n          coordinate: snackCoordinate,\n        },\n        resume: {\n          coordinate: resumeCoordinate,\n        },\n        projects: {\n          coordinate: projectsCoordinate,\n        },\n      };\n\n    case \"GAME_OVER\":\n      return {\n        ...state,\n        playground: {\n          ...state.playground,\n          isGameOver: true,\n        },\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst initialState = {\n  playground: {\n    direction: DIRECTIONS.RIGHT,\n    isGameOver: false,\n  },\n  snake: {\n    coordinates: [getMiddleCooridinate()],\n  },\n  snack: {\n    coordinate: getRandomCoordinate(),\n  },\n  resume: {\n    coordinate: getRandomCoordinate(),\n  },\n  profile: {\n    coordinate: getRandomCoordinate(),\n  },\n  projects: {\n    coordinate: getRandomCoordinate(),\n  },\n};\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [showProfile, setShowProfile] = useState(false);\n  const [showProjects, setShowProjects] = useState(false);\n  const [started, setStarted] = useState(false);\n  const [resumeCount, setResumeCount] = useState(0);\n  const [projectCount, setProjectCount] = useState(0);\n  const [width, setWidth] = useState(window.innerWidth);\n  const [showReadyText, setShowReadyText] = useState(false);\n  const [timer, setTimer] = useState(0);\n  useEffect(() => {\n    if (timer > 0) {\n      setTimeout(() => {\n        console.log(\"startTime, \", timer);\n        setTimer(timer - 1);\n      }, 1000);\n    }\n    if (timer === 0 && showReadyText) {\n      console.log(\"done\");\n      setShowReadyText(false);\n      continueGame();\n    }\n  }, [timer, showReadyText]);\n  const onChangeDirection = (event) => {\n    if (KEY_CODES_MAPPER[event.keyCode]) {\n      dispatch({\n        type: \"SNAKE_CHANGE_DIRECTION\",\n        direction: KEY_CODES_MAPPER[event.keyCode],\n      });\n    }\n  };\n  useEffect(() => {\n    console.log(\"started\" + started);\n  }, [started]);\n  useEffect(() => {\n    console.log(\"width\" + width);\n    console.log(\"started\" + started);\n\n    // if (width > 420) {\n    //   setStarted(true);\n    // }\n  }, [width, started]);\n  useEffect(() => {\n    setResumeCount(resumeCount + 1);\n    if (resumeCount >= 1) {\n      setShowProfile(true);\n    }\n  }, [state.resume.coordinate]);\n\n  useEffect(() => {\n    setProjectCount(projectCount + 1);\n    if (projectCount >= 1) {\n      setShowProjects(true);\n    }\n  }, [state.projects.coordinate]);\n\n  useEffect(() => {\n    if (width > 420) {\n      setStarted(true);\n    }\n    window.addEventListener(\"keyup\", onChangeDirection, false);\n\n    return () => window.removeEventListener(\"keyup\", onChangeDirection, false);\n  }, []);\n\n  useEffect(() => {\n    if (started && showProfile === false && showProjects === false) {\n      const onTick = () => {\n        getIsSnakeOutside(state.snake) || getIsSnakeClumy(state.snake)\n          ? dispatch({ type: \"GAME_OVER\" })\n          : dispatch({ type: \"SNAKE_MOVE\" });\n      };\n      const interval = setInterval(onTick, TICK_RATE);\n      return () => clearInterval(interval);\n    }\n  }, [state, started]);\n  //show resume\n\n  function endGame() {\n    dispatch({ type: \"GAME_OVER\" });\n  }\n  function switchDirection(direction) {\n    dispatch({\n      type: \"SNAKE_CHANGE_DIRECTION\",\n      direction: direction,\n    });\n  }\n  const continueGame = () => {\n    dispatch({ type: \"SNAKE_MOVE\" });\n  };\n  return (\n    <div className=\"app\">\n      <h1 className=\"title\">Kenny Ng, Software Engineer</h1>\n      <Grid\n        snake={state.snake}\n        snack={state.snack}\n        resume={state.resume}\n        isGameOver={state.playground.isGameOver}\n        projects={state.projects}\n      />\n      <Profile\n        showProfile={showProfile}\n        setShowProfile={setShowProfile}\n        endGame={endGame}\n        continueGame={continueGame}\n        showReadyText={showReadyText}\n        setShowReadyText={setShowReadyText}\n        timer={timer}\n        setTimer={setTimer}\n      />\n      <Projects\n        showProjects={showProjects}\n        setShowProjects={setShowProjects}\n        endGame={endGame}\n        continueGame={continueGame}\n        showReadyText={showReadyText}\n        setShowReadyText={setShowReadyText}\n        timer={timer}\n        setTimer={setTimer}\n      />\n      <Timer />\n      <Arrows switchDirection={switchDirection} />\n      <Table />\n      <Contact />\n      <Instruction />\n      <div\n        className={width < 420 ? \"profile\" : \"profile-hidden\"}\n        id=\"welcoming-msg\"\n      >\n        <h1>Hi!</h1>\n        <p>\n          {\" \"}\n          I am Kenny and welcome to my site! Use our provided virtual keyboard\n          &#8595; to play the snake game and learn about me!{\" \"}\n        </p>\n        <div id=\"start-div\">\n          <h1\n            onClick={() => {\n              setStarted(true);\n              setWidth(9999);\n            }}\n            id=\"btn\"\n          >\n            Start!\n          </h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Grid = ({ isGameOver, snake, snack, resume, projects }) => (\n  <div>\n    {GRID.map((y) => (\n      <Row\n        y={y}\n        key={y}\n        snake={snake}\n        snack={snack}\n        resume={resume}\n        projects={projects}\n        isGameOver={isGameOver}\n      />\n    ))}\n  </div>\n);\n\nconst Row = ({ isGameOver, snake, snack, resume, projects, y }) => (\n  <div className=\"grid-row\">\n    {GRID.map((x) => (\n      <Cell\n        x={x}\n        y={y}\n        key={x}\n        snake={snake}\n        snack={snack}\n        projects={projects}\n        resume={resume}\n        isGameOver={isGameOver}\n      />\n    ))}\n  </div>\n);\n\nconst Cell = ({ isGameOver, snake, snack, resume, projects, x, y }) => (\n  <div\n    className={getCellCs(isGameOver, snake, snack, projects, resume, x, y)}\n  />\n);\n\nexport default App;\n",["61","62"],"/Users/kenny01123/personal_project/snake/src/components/profile.jsx",["63","64"],"import React, { useState, useEffect } from \"react\";\nimport \"../css/profile.css\";\nimport { default as closeIcon } from \"../close.svg\";\nimport Contact from \"./contact\";\nfunction Profile({\n  showProfile,\n  setShowProfile,\n  continueGame,\n  showReadyText,\n  setShowReadyText,\n  timer,\n  setTimer,\n}) {\n  // const [showReadyText, setShowReadyText] = useState(false);\n  // const [timer, setTimer] = useState(0);\n  // useEffect(() => {\n  //   if (timer > 0) {\n  //     setTimeout(() => {\n  //       console.log(\"startTime, \", timer);\n  //       setTimer(timer - 1);\n  //     }, 1000);\n  //   }\n  //   if (timer === 0 && showReadyText) {\n  //     console.log(\"done\");\n  //     setShowReadyText(false);\n  //     continueGame();\n  //   }\n  // }, [timer, showReadyText]);\n  // style={showProfile ? null : { display: \"none\" }}\n  return (\n    <>\n      <div className={showProfile ? \"profile\" : \"profile-hidden\"}>\n        <h1>PROFILE</h1>\n        <h2>Kenny Ng Wai Cheong</h2>\n        <p>FROM: Hong Kong</p>\n        <p>LOCATION: Tokyo, Japan</p>\n        <a href=\"mailto:contact@kennyng.dev\">\n          <p id=\"mailto\">MAIL: contact@kennyng.dev</p>\n        </a>\n        <h2>SKILLS:</h2>\n        <p>\n          LANGUAGE: Javascript(Typescript, Node.js),\n          <br />\n          Go, Python, Dart(Flutter)\n        </p>\n        <p>FRONTEND: HTML/CSS, React(Redux,Next.js),Vue(Vuex,Nuxt.js)</p>\n        <p>DATABASE: Cloud Firestore, MongoDB, PostgreSQL, MySQL</p>\n        <p>DB-RELATED: REST API, GraphQL, Knex.js, TypeORM</p>\n        <p>BACKEND: Express, Flask, Gin, Nginx</p>\n        <p>INFRA: Docker, Git</p>\n        <p>PLATFORM: GCP(Firebase), Heroku</p>\n        <h2>EDUCATION:</h2>\n        <p>M.A. in International Relations, The University of Warwick</p>\n        <p>B.B.A in Economics with Minor in Social Science</p>\n        <p>Code Chrysalis Advanced Engineering Program</p>\n        <p>Tokyo School of Japanese Language, Comprehensive Japanese Program</p>\n        <Contact />\n        <button\n          className=\"goBack\"\n          onClick={() => {\n            setTimer(3);\n            setShowReadyText(true);\n            setShowProfile(false);\n          }}\n        >\n          <img src={closeIcon} alt=\"close-icon\"></img>\n        </button>\n      </div>\n      <div\n        className=\"getReadyContainer\"\n        style={showReadyText ? null : { display: \"none\" }}\n      >\n        <h1 className=\"getReady\">\n          Get Ready!\n          <br />\n          {timer}\n        </h1>\n      </div>\n    </>\n  );\n}\n\nexport default Profile;\n","/Users/kenny01123/personal_project/snake/src/index.js",[],["65","66"],"/Users/kenny01123/personal_project/snake/src/components/timer.jsx",["67","68","69"],"import React, { useState, useEffect, useRef } from \"react\";\n\nfunction Timer() {\n  return <></>;\n}\n\nexport default Timer;\n","/Users/kenny01123/personal_project/snake/src/components/arrows.jsx",["70","71","72"],"import React, { useState, useEffect, useRef } from \"react\";\nfunction Arrows({ switchDirection }) {\n  return (\n    <div className=\"arrows\">\n      <ul>\n        <li onClick={() => switchDirection(\"UP\")}>&#8593;</li>\n        <li onClick={() => switchDirection(\"LEFT\")}>&#8592;</li>\n        <li onClick={() => switchDirection(\"BOTTOM\")}>&#8595;</li>\n        <li onClick={() => switchDirection(\"RIGHT\")}>&#8594;</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Arrows;\n",["73","74"],"/Users/kenny01123/personal_project/snake/src/components/table.jsx",["75","76","77"],"import React, { useState, useEffect, useRef } from \"react\";\n\nfunction Table() {\n  return (\n    <div className=\"table\">\n      <ul>\n        <li className=\"red\">Profile</li>\n        <li className=\"green\">Projects</li>\n\n        <li className=\"blue\">Snack</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Table;\n","/Users/kenny01123/personal_project/snake/src/components/contact.jsx",["78","79","80"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { default as githubIcon } from \"../icons/github128.png\";\nimport { default as twitterIcon } from \"../icons/twitter128.png\";\nimport { default as linkedinIcon } from \"../icons/linkedin128.png\";\nimport \"../css/contact.css\";\n\nfunction Contact() {\n  return (\n    <div className=\"contact\">\n      <a href=\"https://github.com/kenny01123\">\n        <img src={githubIcon} alt=\"github-logo\" />\n      </a>\n      <a href=\"https://twitter.com/kennyngdev\">\n        <img src={twitterIcon} alt=\"twitter-logo\" />\n      </a>\n      <a href=\"https://www.linkedin.com/in/kenny-wai-cheong-ng/\">\n        <img src={linkedinIcon} alt=\"linkedin-logo\" />\n      </a>\n    </div>\n  );\n}\n\nexport default Contact;\n",["81","82"],"/Users/kenny01123/personal_project/snake/src/components/instruction.jsx",["83","84","85"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"../css/instruction.css\";\n\nfunction Instruction() {\n  return (\n    <div className=\"instruction\">\n      <p>\n        Welcome! Use your arrow keys or these virtual keys &#8595; to play the\n        snake game and learn about me!\n      </p>\n    </div>\n  );\n}\n\nexport default Instruction;\n","/Users/kenny01123/personal_project/snake/src/components/projects.jsx",["86","87"],"import React, { useState, useEffect } from \"react\";\nimport \"../css/projects.css\";\nimport { default as closeIcon } from \"../close.svg\";\nimport { default as androidIcon } from \"../icons/android.png\";\nimport { default as githubIcon } from \"../icons/github128.png\";\n\nfunction Projects({\n  showProjects,\n  setShowProjects,\n  continueGame,\n  showReadyText,\n  setShowReadyText,\n  timer,\n  setTimer,\n}) {\n  return (\n    <>\n      <div className={showProjects ? \"profile\" : \"profile-hidden\"}>\n        <h1>PROJECTS</h1>\n        <div className=\"projects\">\n          <div className=\"oneProject\">\n            <span>\n              <a href=\"https://play.google.com/store/apps/details?id=movienight.cc.app\">\n                <h2>MOVIE NIGHT </h2>\n              </a>{\" \"}\n              <a href=\"https://play.google.com/store/apps/details?id=movienight.cc.app\">\n                <img\n                  src={androidIcon}\n                  className=\"title-icon\"\n                  id=\"android\"\n                  alt=\"Google-Play-Store-Link\"\n                ></img>\n              </a>\n              <a href=\"https://github.com/MovieNightCC/MovieNight\">\n                {\" \"}\n                <img\n                  src={githubIcon}\n                  className=\"title-icon\"\n                  alt=\"Github-Link\"\n                ></img>\n              </a>{\" \"}\n            </span>\n            <p>ANDROID: Dart, Flutter, TypeScript, Firebase, Firestore</p>\n            <p>A One-Stop Solution for choosing movies for your Movie Night.</p>\n          </div>\n          <div className=\"oneProject\">\n            <span>\n              <a href=\"https://mymizuteams.web.app/\">\n                <h2>MYMIZU TEAMS</h2>\n              </a>{\" \"}\n              <a href=\"https://github.com/dius00/mymizu_teams\">\n                {\" \"}\n                <img\n                  src={githubIcon}\n                  className=\"title-icon\"\n                  alt=\"Github-Link\"\n                ></img>\n              </a>{\" \"}\n            </span>{\" \"}\n            <p>WEB: JavaScript, React, Firebase, Firestore</p>\n            <p>\n              Gamifying and Socializing your{\" \"}\n              <a href=\"https://www.mymizu.co/\">mymizu®</a> experience.\n            </p>\n          </div>\n          <div className=\"oneProject\">\n            <span>\n              <a href=\"https://github.com/kenny01123/pun_detector\">\n                <h2>PUN DETECTOR</h2>\n              </a>{\" \"}\n              <a href=\"https://github.com/kenny01123/pun_detector\">\n                {\" \"}\n                <img\n                  src={githubIcon}\n                  className=\"title-icon\"\n                  alt=\"Github-Link\"\n                ></img>\n              </a>{\" \"}\n            </span>{\" \"}\n            <p>CLI: GO, Python, Snowboy Hotword Detection</p>\n            <p>\n              Utilizing Voice Recognization technology to create a Pun-safe\n              environment for you.\n            </p>\n          </div>{\" \"}\n          <div className=\"oneProject\">\n            <span>\n              <a href=\"https://github.com/kenny01123/file-storage-server\">\n                <h2>FILE STORAGE SERVICE</h2>\n              </a>{\" \"}\n              <a href=\"https://github.com/kenny01123/file-storage-server\">\n                {\" \"}\n                <img src={githubIcon} id=\"icon4\" alt=\"Github-Link\"></img>\n              </a>{\" \"}\n            </span>{\" \"}\n            <p>WEB/CLI: Python, Nginx, React, Docker</p>\n            <p>A simple microservice for file storage, with Web client/CLI.</p>\n          </div>\n          <div className=\"oneProject\">\n            <span>\n              <a href=\"http://barteryprod.herokuapp.com/\">\n                <h2>BARTERY</h2>\n              </a>{\" \"}\n              <a href=\"https://github.com/kenny01123/bartery\">\n                {\" \"}\n                <img\n                  src={githubIcon}\n                  className=\"title-icon\"\n                  alt=\"Github-Link\"\n                ></img>\n              </a>{\" \"}\n            </span>{\" \"}\n            <p>WEB: Javascript, React, PostgreSQL, Heroku, Bootstrap</p>\n            <p>\n              A WEB Board for trading your unwanted items in return for\n              something that sparks joy.\n            </p>\n          </div>\n        </div>\n        <button\n          className=\"goBack\"\n          onClick={() => {\n            setTimer(3);\n            setShowReadyText(true);\n            setShowProjects(false);\n          }}\n        >\n          <img src={closeIcon} alt=\"close-icon\"></img>\n        </button>\n      </div>\n      <div\n        className=\"getReadyContainer\"\n        style={showReadyText ? null : { display: \"none\" }}\n      >\n        <h1 className=\"getReady\">\n          Get Ready!\n          <br />\n          {timer}\n        </h1>\n      </div>\n    </>\n  );\n}\n\nexport default Projects;\n",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":260,"column":6,"nodeType":"94","endLine":260,"endColumn":31,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":267,"column":6,"nodeType":"94","endLine":267,"endColumn":33,"suggestions":"97"},{"ruleId":"92","severity":1,"message":"98","line":276,"column":6,"nodeType":"94","endLine":276,"endColumn":8,"suggestions":"99"},{"ruleId":"92","severity":1,"message":"100","line":288,"column":6,"nodeType":"94","endLine":288,"endColumn":22,"suggestions":"101"},{"ruleId":"88","replacedBy":"102"},{"ruleId":"90","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"108","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"88","replacedBy":"109"},{"ruleId":"90","replacedBy":"110"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"108","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"111","line":1,"column":38,"nodeType":"106","messageId":"107","endLine":1,"endColumn":44},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"108","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"111","line":1,"column":38,"nodeType":"106","messageId":"107","endLine":1,"endColumn":44},{"ruleId":"88","replacedBy":"112"},{"ruleId":"90","replacedBy":"113"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"108","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"111","line":1,"column":38,"nodeType":"106","messageId":"107","endLine":1,"endColumn":44},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"108","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"111","line":1,"column":38,"nodeType":"106","messageId":"107","endLine":1,"endColumn":44},{"ruleId":"88","replacedBy":"114"},{"ruleId":"90","replacedBy":"115"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"108","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"111","line":1,"column":38,"nodeType":"106","messageId":"107","endLine":1,"endColumn":44},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"108","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resumeCount'. Either include it or remove the dependency array. You can also do a functional update 'setResumeCount(r => ...)' if you only need 'resumeCount' in the 'setResumeCount' call.","ArrayExpression",["118"],"React Hook useEffect has a missing dependency: 'projectCount'. Either include it or remove the dependency array. You can also do a functional update 'setProjectCount(p => ...)' if you only need 'projectCount' in the 'setProjectCount' call.",["119"],"React Hook useEffect has a missing dependency: 'width'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has missing dependencies: 'showProfile' and 'showProjects'. Either include them or remove the dependency array.",["121"],["116"],["117"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["116"],["117"],"'useRef' is defined but never used.",["116"],["117"],["116"],["117"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [resumeCount, state.resume.coordinate]",{"range":"130","text":"131"},"Update the dependencies array to be: [projectCount, state.projects.coordinate]",{"range":"132","text":"133"},"Update the dependencies array to be: [width]",{"range":"134","text":"135"},"Update the dependencies array to be: [state, started, showProfile, showProjects]",{"range":"136","text":"137"},[6819,6844],"[resumeCount, state.resume.coordinate]",[6976,7003],"[projectCount, state.projects.coordinate]",[7230,7232],"[width]",[7635,7651],"[state, started, showProfile, showProjects]"]